user www-data;
worker_processes auto;
pid /run/nginx.pid;

error_log /run/log/nginx-error notice;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	server_tokens on;

	# server_names_hash_bucket_size 64;
	server_name_in_redirect on;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

    # Mozilla recommended MODERN cipersuites sans TLSv1.1
    # https://wiki.mozilla.org/Security/Server_Side_TLS
	ssl_protocols TLSv1.2;
	ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

    # This redirects all data to FIFOs which are created in advance.
    # nginx is the only one which needs to do this.
	access_log /run/log/nginx-access combined;

	##
	# Gzip Settings
	##

	gzip off;
	gzip_disable "msie6";

    proxy_request_buffering off;
    proxy_buffering off;
    proxy_cache off;

    proxy_temp_path /tmp/nginx/proxy 1 2;    
    proxy_cache_path /tmp/nginx/cache levels=1:2 keys_zone=one:10m;
    client_body_temp_path /tmp/nginx/body 1 2;
    fastcgi_temp_path /tmp/nginx/fastcgi 1 2;
    scgi_temp_path /tmp/nginx/scgi 1 2;
    uwsgi_temp_path /tmp/nginx/uwsgi 1 2;

    ## 
    # Server configuration
    ##
    
    server {
        listen 443 ssl default_server;
    
        ssl_certificate     /run/nginx-cert.crt;
        ssl_certificate_key /run/nginx-key.pem;
    
        add_header Cache-Control no-cache;

        location /prometheus/nginx/ {
            proxy_pass http://127.0.0.1:9113/;
        }

        location /prometheus/powerdns/ {
            proxy_pass http://127.0.0.1:9120/;
        }
        
        # PowerDNS Endpoint (rewritten to be prettier)
        location /powerdns/api/ {
            {% if API_AUTH != "disabled" %}
            auth_basic "Restricted";
            auth_basic_user_file {{powerdns_admin_htpasswd}};
            {% endif %}
            proxy_pass http://127.0.0.1:8080/api/;
            proxy_set_header X-API-Key {{API_KEY}}; 
        }
        
        location / {
            return 404;
        }
    }
    
    # Add a redirect for port 80.
    server {
        listen  80 default_server;
        
        # This stub is used by the Prometheus exporter.
        location /nginx_status {
          stub_status on;
          access_log   off;
          allow 127.0.0.1;
          deny all;
        }
        
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
}
